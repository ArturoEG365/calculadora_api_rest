#!/bin/bash

echo "üê≥ Dockerizando proyecto .NET..."

# Funci√≥n para mostrar ayuda
show_help() {
    echo "Uso: ./docker-start.sh [OPCI√ìN]"
    echo ""
    echo "Opciones:"
    echo "  build     Construir las im√°genes Docker"
    echo "  up        Iniciar los contenedores"
    echo "  down      Detener los contenedores"
    echo "  logs      Mostrar logs de la aplicaci√≥n"
    echo "  clean     Limpiar im√°genes y contenedores"
    echo "  help      Mostrar esta ayuda"
    echo ""
}

# Funci√≥n para construir
build_containers() {
    echo "üî® Construyendo contenedores..."
    docker-compose build
}

# Funci√≥n para iniciar
start_containers() {
    echo "üöÄ Iniciando contenedores..."
    docker-compose up -d
    echo "‚úÖ Aplicaci√≥n disponible en: http://localhost:8080"
    echo "üìä Swagger UI: http://localhost:8080/swagger"
}

# Funci√≥n para detener
stop_containers() {
    echo "üõë Deteniendo contenedores..."
    docker-compose down
}

# Funci√≥n para mostrar logs
show_logs() {
    echo "üìù Mostrando logs..."
    docker-compose logs -f api
}

# Funci√≥n para limpiar
clean_containers() {
    echo "üßπ Limpiando contenedores e im√°genes..."
    docker-compose down --volumes --rmi all
    docker system prune -f
}

# Verificar que Docker est√© instalado
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker no est√° instalado. Por favor, instala Docker primero."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose no est√° instalado. Por favor, instala Docker Compose primero."
    exit 1
fi

# Procesar argumentos
case "$1" in
    build)
        build_containers
        ;;
    up)
        start_containers
        ;;
    down)
        stop_containers
        ;;
    logs)
        show_logs
        ;;
    clean)
        clean_containers
        ;;
    help|--help|-h)
        show_help
        ;;
    "")
        echo "üê≥ Iniciando proyecto completo..."
        build_containers
        start_containers
        ;;
    *)
        echo "‚ùå Opci√≥n no v√°lida: $1"
        show_help
        exit 1
        ;;
esac
